/* 1.a. */
/* px => как, еденица измерения (основная) */
.parent {
  max-width: 1000px; /* это мак. ширина Контейнера/Блоков */
  margin: 0 auto;
  display: flex;
}
.child {
  min-height: 200px; /* это так определяем мин. высоту Блоков/Контейнера */
  width: 333px;
  background-color: darkcyan;
  border: 2px solid #000; /* как правило, для свойства/border => рекомендуется, всегда использовать: px - как еденицу измерения */
}

/* 1.b. */
/* % => как, еденица измерения с автоматической корректировкой */
.parent2 {
  max-width: 700px;
  margin: 0 auto;
  display: flex;
}
.child2 {
  min-height: 200px;
  width: 33.33%; /* т.е. от свойства/значения: max-width, Родителя: .parent2 => будет "автоматически" взято, по 33.33% (от общего: max-width) => для формирования размера/ширины Блочных элементов, т.е. 3 шт. согласно html-структуры */
  background-color: darkgoldenrod;
  border: 2px solid #125;
}

/* 1.c. */
/* em => как еденица, "зависимая" от Родителя */
.block {
  font-size: 20px;
}
.block p {
  font-size: 1em; /* т.е. при использ. em => значение/свойства: font-size, у наследуемого, формируется автоматически (от Родительского), т.е.: 20px * 1ем = 20px, значит пока такой же => будет в Браузере шрифт (при 1) */
  margin-bottom: 1em; /* здесь, по аналогии, только речь идёт, о формировании/организации отступов между обзацами */
}
/* rem => как еденица, "зависимая" от Корневого тега: <html /> */
html {
  font-size: 10px;
}
.block2 {
  font-size: 50px;
}
.block2 p {
  font-size: 1rem; /* т.е. при использ. rem => значение/свойства: font-size, у наследуемого, формируется автоматически (от корневого элемента/тега: <html />, его значения), т.е.: 10px * 1rем = 10px, значит пока такой же => будет в Браузере шрифт (при 1) => не зависимо, от font-size: 50px из .block2 */
  margin-bottom: 1rem; /* здесь, по аналогии, только речь идёт, о формировании/организации отступов между обзацами */
}
