// без for, взаимодействие с числами Фибоначчи
let fibo = [];
fibo.push(1);
fibo.push(1);
fibo.push(2); // 1 + 1
fibo.push(3); // 1 + 2
fibo.push(5); // 2 + 3
fibo.push(8); // 3 + 5
fibo.push(13); // 5 + 8
fibo.push(21); // 8 + 13

// с for
let fib = [1, 1]; // данные единицы, как правило прописываются самостоятельно
for (let i = 1; i < 9; ++i) {
  fib.push(fib[i] + fib[i - 1]);
}
console.log(fib); // (10) [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]

// алгоритм действий
// 1. объявление переменной/инициализация, т.е. let i = 1; (начнём с индекса [1])
// 2. проверка условия i(1) < 9, true (запуск итерации)
// 3. выполнение тела цикла, i(1) + (i(1) - 1) = значение индекса [1] + значение индекса [0] = добавление суммы 2, на индекс 2
// 4. завершающая операция ++i, увеличение let i на 1, становится let i = 2;
// 5. проверка условия i(2) < 9, true
// 6. выполнение тела цикла, i(2) + (i(2) - 1) = 3
// 7. завершающая операция ++i, let i = 3;
// 8. проверка условия i(3) < 9, true
// 9. выполнение тела цикла, i(3) + (i(3) - 1) = 5
// 10. завершающая операция ++i, let i = 4
// 11. проверка условия.. true
// 12. выполнение.. i(4) + (i(4) - 1) = 5 + 3 = 8
// .. и т.д. до момента, пока условие не словит false, т.е. до момента 9 < 9

// варианты наполнения (скобок) цикла for, разное поведение
for (;;) {
  console.log('Я буду сниться тебе в кошмарах!'); // цикл который никогда не завершиться
}

for (; Math.random() >= 0.1; ) {
  console.log('И ещё разок!'); // цикл, который может завершиться на любой итерации с вероятностью 10%
}

let i = 10;
for (; i > 0; ) {
  console.log('i = ' + i--); // вынос инициализации за пределы, помещение завершающей инструкции в тело
}

for (let i = 0; ; ++i) {
  console.log(i); // вечный цикл считающий до бесконечности (нет, ограничение по памяти наступит)
}
